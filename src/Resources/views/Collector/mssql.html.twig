{# templates/data_collector/template.html.twig #}
{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block toolbar %}
    {% set icon %}
        {# this is the content displayed as a panel in the toolbar #}
        {{ include('bundles/mssql-profiler-bundle/images/profiler/database.svg') }}
        <span class="sf-toolbar-value"> {{ collector.getCountConn }} in {{ collector.getTime }}ms</span>
    {% endset %}

    {% set text %}
        {# this is the content displayed when hovering the mouse over
           the toolbar panel #}
        <div class="sf-toolbar-info-piece">
            <b>Queries</b>
            <span>{{ collector.getCountConn }}</span>
        </div>

        <div class="sf-toolbar-info-piece">
            <b>Total time</b>
            <span>{{ collector.getTime }}ms</span>
        </div>
    {% endset %}

    {# the 'link' value set to 'false' means that this panel doesn't
       show a section in the web profiler #}
    {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { link: true }) }}
{% endblock %}


{#{% block head %}
    {# Optional. Here you can link to or define your own CSS and JS contents. #}
{# Use {{ parent() }} to extend the default styles instead of overriding them. #}
{#% endblock %}#}

{% block menu %}
    {# This left-hand menu appears when using the full-screen profiler. #}
    <span class="label">
        <span class="icon"><img src="..." alt=""/></span>
        <strong>Queries</strong>
    </span>
{% endblock %}

{% block panel %}
    {# Optional, for showing the most details. #}
    <h2>Mssql</h2>
    <table>
        <tr>
            <th>Time</th>
            <th>Query</th>
            <th>Result</th>
        </tr>

        {% for query in collector.getDump %}
            <tr>
                <td>{{ query['TIME'] }}</td>
                <td>
<pre><span class="command">USE</span> [{{ query['DB'] }}]
<span class="command">EXEC</span>{{ query['NAME'] }}
{% for inp in query['IN'] %}
{% if inp['type'] != query['ENUM_PARAM_OUT'] %}
{{ inp['param_name'] }} = <span class="{{ inp['php_type']|lower }}"> {{ inp['var'] }} {% if not loop.last %},{% endif %}</span> 
{% else %}
{{ inp['param_name'] }} = @{{ inp['var_name'] }} output{% if not loop.last %},{% endif %}
{% endif %}
{% endfor %}
{% for outp in query['OUT'] %}
{% if not loop.first %}
select
{% endif %}
 @{{ outp['var_name'] }}{% if not loop.last %},{% endif %}
{% endfor %}

<a href="#" onclick="copyTextToClipboard(getQuery(this));return false;">Zkopírovat query do schránky</a>
</pre>
                </td>
                <td>{{ query['RESULT'] }} rows</td>
            </tr>
        {% endfor %}
    </table>
<style>
    span.command, span.datatype { color: #218BC3; }
    span.string { color: red; }
    span.null { color: gray; }
    span.comment { color: green; }
</style>
<script>
   function copyTextToClipboard(text) {
        var textArea = document.createElement("textarea");

        //
        // *** This styling is an extra step which is likely not required. ***
        //
        // Why is it here? To ensure:
        // 1. the element is able to have focus and selection.
        // 2. if element was to flash render it has minimal visual impact.
        // 3. less flakyness with selection and copying which **might** occur if
        //    the textarea element is not visible.
        //
        // The likelihood is the element won't even render, not even a flash,
        // so some of these are just precautions. However in IE the element
        // is visible whilst the popup box asking the user for permission for
        // the web page to copy to the clipboard.
        //

        // Place in top-left corner of screen regardless of scroll position.
        textArea.style.position = 'fixed';
        textArea.style.top = 0;
        textArea.style.left = 0;

        // Ensure it has a small width and height. Setting to 1px / 1em
        // doesn't work as this gives a negative w/h on some browsers.
        textArea.style.width = '2em';
        textArea.style.height = '2em';

        // We don't need padding, reducing the size if it does flash render.
        textArea.style.padding = 0;

        // Clean up any borders.
        textArea.style.border = 'none';
        textArea.style.outline = 'none';
        textArea.style.boxShadow = 'none';

        // Avoid flash of white box if rendered for any reason.
        textArea.style.background = 'transparent';


        textArea.value = text;

        document.body.appendChild(textArea);

        textArea.select();

        try {
            var successful = document.execCommand('copy');
            var msg = successful ? 'successful' : 'unsuccessful';
            console.log('Copying text command was ' + msg);
        } catch (err) {
            console.log('Oops, unable to copy');
        }

        document.body.removeChild(textArea);
    }


    function getQuery(elem) {
        var html = elem.parentNode.innerHTML.replace(/<a.*?<\/a>/g,"");
        return html.replace(/<[^>]*>/g, "");
    }

</script>
{% endblock %}

